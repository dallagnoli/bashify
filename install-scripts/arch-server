#!/bin/sh
set -e

# Print an ASCII art logo
logo() {
printf "\033[35m_____________________________________________ 
     __              __        _  _        
    /  )        /   /  )      // //        
   /--/ __  _. /_  /  / __.  // // __.  _, 
  /  (_/ (_(__/ /_/__/_(_/|_</_</_(_/|_(_)_
                                        /| 
                                       |/  
_____________________________________________

    'Every Little Thing He Does Is Magic'    
_____________________________________________\033[0m\n"
}

# Make sure the script is run from an Arch Linux ISO environment
verify_iso() {
    if [ ! -e /run/archiso/bootmnt/arch/x86_64/airootfs.sfs ]; then
        printf "\033[31mERROR: This script must be run from an Arch Linux ISO environment.\033[0m\n"
        exit 1
    fi
}

# Make sure the script is run as root
verify_root() {
    if [ "$(id -u)" -ne 0 ]; then
        printf "\033[31mERROR: This script must be run as root.\033[0m\n"
        exit 1
    fi
}

# Make sure that pacman is not locked
verify_pacman() {
    if [ -f /var/lib/pacman/db.lck ]; then
        if pgrep -x pacman >/dev/null; then
            printf "\033[31mERROR: Pacman is currently running. Close it before proceeding.\033[0m\n"
            exit 1
        else
            rm -f /var/lib/pacman/db.lck
        fi
    fi
}

# Detect if the system is running in UEFI or BIOS mode
verify_boot_mode() {
    if [ -f /sys/firmware/efi/fw_platform_size ]; then
        printf "\033[1;32mSystem will be installed in UEFI mode.\033[0m\n"
        BOOT_MODE="UEFI"
    else
        printf "\033[1;33mSystem will be installed in BIOS mode. UEFI is recommended for better support.\033[0m\n"
        BOOT_MODE="BIOS"
    fi
}

# Group all verification functions
verify_all() {
    verify_iso
    verify_root
    verify_pacman
    verify_boot_mode
}