#!/bin/sh
set -e

# Print an ASCII art logo
logo() {
printf "_____________________________________________ 
     __              __        _  _        
    /  )        /   /  )      // //        
   /--/ __  _. /_  /  / __.  // // __.  _, 
  /  (_/ (_(__/ /_/__/_(_/|_</_</_(_/|_(_)_
                                        /| 
                                       |/  
_____________________________________________

    'Every Little Thing He Does Is Magic'    
_____________________________________________\n"
}

# Make sure the script is run as root
verify_root() {
    if [ "$(id -u)" -ne 0 ]; then
        printf "ERROR: This script must be run as root.\n"
        exit 1
    fi
}

# Make sure the script is run from an Arch Linux ISO environment
verify_iso() {
    if [ ! -e /run/archiso/bootmnt/arch/x86_64/airootfs.sfs ]; then
        printf "ERROR: This script must be run from an Arch Linux ISO environment.\n"
        exit 1
    fi
}

# Make sure that pacman is not locked
verify_pacman() {
    if [ -f /var/lib/pacman/db.lck ]; then
        if pgrep -x pacman >/dev/null; then
            printf "ERROR: Pacman is currently running. Close it before proceeding.\n"
            exit 1
        else
            rm -f /var/lib/pacman/db.lck
        fi
    fi
}

# Group all verification functions
verify_all() {
    verify_root
    verify_iso
    verify_pacman
}

# Detect if the system is running in UEFI or BIOS mode
boot_mode() {
    if [ -f /sys/firmware/efi/fw_platform_size ]; then
        printf "\n>> System will be installed in UEFI mode.\n"
        BOOT=UEFI
    else
        printf "\n>> System will be installed in BIOS mode.\n"
        BOOT=BIOS
    fi
}

# Prompt the user to select a filesystem
filesystem() {
    while :; do
        printf "_____________________________________________

             Choose a Filesystem
_____________________________________________ 

  [1] ext4: Recommended for most users, 
  stable and widely supported.

  [2] btrfs: Advanced filesystem with 
  features like snapshots and compression.

  [3] xfs: High-performance filesystem 
  suitable for large files and databases.
_____________________________________________

Make your choice (1-3), default is ext4: "

        read -r fs_choice

        case $fs_choice in
            1|"" )
                printf ">> Filesystem set to ext4\n"
                FS=ext4
                break
                ;;
            2 )
                printf ">> Filesystem set to btrfs\n"
                FS=btrfs
                break
                ;;
            3 )
                printf ">> Filesystem set to xfs\n"
                FS=xfs
                break
                ;;
            * )
                printf ">> Invalid option, please try again\n"
                ;;
        esac
    done
}

logo
boot_mode
filesystem